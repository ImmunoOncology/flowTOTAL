% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runBackgating.R
\name{runDensityBackgating}
\alias{runDensityBackgating}
\title{Run Density-Based Gating on Flow Cytometry Data}
\usage{
runDensityBackgating(
  metadata,
  output,
  chnl = c("FSC-A", "SSC-A"),
  channel_bg,
  logicle_chnls = NULL,
  sd.max_it = 0.75,
  min.pct_it = 0.01,
  target.fsc = 50000,
  target.ssc = 17500,
  min.ff_subset = 250,
  log_file = "Log_file_error.txt",
  log_file_traditional = "Log_file_error_traditional.txt",
  track_file = "Log_file_track.txt",
  cluster = NULL
)
}
\arguments{
\item{metadata}{A data frame containing information about the files to be processed.
It should have at least one column named 'filename_clean' containing the paths to the FCS files.
Example: data.frame(filename_clean = c("file1.fcs", "file2.fcs"))}

\item{output}{Output directory path where the results and logs will be stored.}

\item{chnl}{Vector of channel names for which density-based gating is performed.
Default: c("FSC-A", "SSC-A")}

\item{channel_bg}{Vector of channel names and signs specifying the gating operations.}

\item{logicle_chnls}{Vector of channel names that require logicle transformation.}

\item{sd.max_it}{Standard deviation threshold for peak detection.}

\item{min.pct_it}{Minimum percentage of gated events required for iteration.}

\item{target.fsc}{Target value for FSC-A gating.}

\item{target.ssc}{Target value for SSC-A gating.}

\item{min.ff_subset}{Minimum number of events required for the final subset.}

\item{log_file}{File name for the error log.}

\item{log_file_traditional}{File name for the traditional error log.}

\item{track_file}{File name for the tracking log.}

\item{cluster}{Number of cluster nodes for parallel processing. If NULL, no parallel processing is used.}
}
\description{
This function performs density-based gating on a batch of flow cytometry data
files specified in the metadata. It applies density-based gating to each file,
saves the results, and logs in the output directory.
}
\examples{
runDensityBackgating(metadata = my_metadata, output = "results", channel_bg = c("FL1-H", "FL2-H"),
                     sd.max_it = 0.5, target.fsc = 50000, target.ssc = 20000)

}
